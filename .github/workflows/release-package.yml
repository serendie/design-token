name: Release package by comment

on:
  issue_comment:
    types: [created]

jobs:
  release:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Check base branch is release
        run: |
          PR_NUMBER=$(jq -r ".issue.number" "$GITHUB_EVENT_PATH")
          PR_DETAILS=$(gh pr view "$PR_NUMBER" --json baseRefName)
          BASE_BRANCH=$(echo "$PR_DETAILS" | jq -r '.baseRefName')
          if [[ "$BASE_BRANCH" != "release" ]]; then
            exit 0
          fi
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Check increment comment
        run: |
          IS_VALID_COMMENT=${{ contains(fromJson('["major", "minor", "patch"]'), github.event.comment.body) }}
          if "${IS_VALID_COMMENT}"
            exit 1
          fi

          echo "INCREMENT=${{github.event.comment.body}}}" >> $GITHUB_ENV
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup Git User
        shell: bash
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
      - name: Setup .npmrc
        run: cp ./.npmrc.example ./.npmrc
      - run: npm ci
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Release
        run: npm run release --ci --increment ${{ env.INCREMENT }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Merge Pull Request
        run: |
          PR_NUMBER=$(jq -r ".issue.number" "$GITHUB_EVENT_PATH")
          gh pr merge "$PR_NUMBER" --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
